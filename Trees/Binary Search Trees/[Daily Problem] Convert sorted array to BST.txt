Question:

Given an array where elements are sorted in ascending order, convert it to a height balanced BST.

For this problem, a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of every node never differ by more than 1.

Example:

Given the sorted array: [-10,-3,0,5,9],

One possible answer is: [0,-3,9,-10,null,5], which represents the following height balanced BST:

      0
     / \
   -3   9
   /   /
 -10  5


Solution:
 
Reference : https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree/

class Node{

    Node left;
    Node right;
    int data;
    
    public static Node newNode(int data){
        Node n = new Node();
        n.left = null;
        n.right = null;
        n.data = data;
        return n;
    }
}


public Node sortedArrayToBST(int[] num) {

    if (num.length == 0) {
        return null;
    }
    Node head = helper(num, 0, num.length - 1);
    return head;
	
}

public Node helper(int[] num, int low, int high) {

    if (low > high) { // Done
        return null;
    }
	
    int mid = (low + high) / 2;
    
	Node node = new Node(num[mid]);
    node.left = helper(num, low, mid - 1);
    node.right = helper(num, mid + 1, high);
	
    return node;
}
